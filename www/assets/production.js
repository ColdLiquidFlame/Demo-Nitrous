 /**** angular_test_app - Chris White ****/
angular.module("myApp",["ngRoute","modify-item-directive","item-service","list-item-directive","authentication-factory","myApp.main","myApp.lists","myApp.navbars","myApp.login","myApp.register"]).run(["$rootScope","$location",function(a,b){a.$on("$routeChangeError",function(a,c,d,e){"AUTH_REQUIRED"===e&&b.path("/login"+c.$$route.originalPath)})}]).config(["$routeProvider","$locationProvider",function(a,b){a.otherwise({redirectTo:"/main"})}]),angular.module("authentication-factory",["firebase","user-factory"]).factory("Auth",["$firebaseAuth","$rootScope","$location","User",function(a,b,c,d){var e=new Firebase("https://nitrous-demo.firebaseio.com/"),f=a(e);return f.ref=e,f.$onAuth(function(a){if(a)switch(b.auth=a,a.provider){case"password":b.user=d.GetUser(a.uid);break;case"google":b.user=d.UpdateUser(a.uid,a.google);break;case"facebook":b.user=d.UpdateUser(a.uid,a.facebook)}else b.auth=null,b.user=null,c.path("/main")}),f}]),angular.module("id-service",[]).service("idService",[function(){var a=function(){function a(){return Math.floor(65536*(1+Math.random())).toString(16).substring(1)}return a()+a()+"-"+a()+"-"+a()+"-"+a()+"-"+a()+a()+a()};this.Guid=function(){return a()}}]),angular.module("item-service",["firebase"]).service("itemService",["$firebaseArray",function(a){var b=new Firebase("https://nitrous-demo.firebaseio.com/items"),c=a(b);this.addItem=function(a){c.$add(a)},this.removeItem=function(a){c.$remove(a)},this.editItem=function(a){c.$save(a)},this.items=function(){return c}}]),angular.module("list-item-directive",[]).directive("listItem",["itemService",function(a){return{restrict:"E",templateUrl:"components/list-item/list-item.html",scope:{items:"=",selectedItem:"=",options:"="},controller:["$scope",function(b){b["delete"]=function(b){a.removeItem(b)},b.edit=function(a){b.selectedItem=a}}]}}]),angular.module("modify-item-directive",[]).directive("modifyItem",["itemService",function(a){return{restrict:"E",templateUrl:"components/modify-item/modify-item.html",scope:{items:"=listItems",selectedItem:"="},controller:["$scope",function(b){b.$watch("selectedItem",function(a){b.currentItem=angular.copy(b.selectedItem)}),b.beginItemAdd=function(){b.isAdd=!0},b.save=function(){b.isAdd?a.addItem(b.currentItem):(b.selectedItem.value=b.currentItem.value,a.editItem(b.selectedItem)),b.cancelEdit()},b.cancelEdit=function(){b.showForm=!1,b.currentItem=null,b.selectedItem=null,b.isAdd=!1,b.isEdit=!1}}],link:function(a,b,c){}}}]),angular.module("myApp.navbars",["authentication-factory"]).controller("NavBarCtrl",["$scope","$location","Auth",function(a,b,c){function d(){switch(a.navbar={},b.$$url){case"/main":a.navbar.main=!0;break;case"/lists":a.navbar.lists=!0}}a.$on("$locationChangeStart",function(a){d()}),a.logout=function(){c.$unauth()},d()}]),angular.module("user-factory",["firebase"]).factory("User",["$firebaseObject",function(a){var b=new Firebase("https://nitrous-demo.firebaseio.com/users"),c=function(c){var d=b.child(c);return a(d)},d=function(c,d){var e=b.child(c);return e.set(d),a(e)};return{GetUser:c,UpdateUser:d}}]),angular.module("myApp.lists",["ngRoute","authentication-factory"]).config(["$routeProvider",function(a){a.when("/lists",{controller:"ListsCtrl",templateUrl:"lists/lists.html",resolve:{currentAuth:["Auth","$location",function(a,b){return a.$requireAuth()}]}})}]).controller("ListsCtrl",["$scope","itemService","currentAuth","$location","Auth",function(a,b,c,d,e){a.items=b.items(),a.newItem=null,a.selectedItem=null}]),angular.module("myApp.login",["ngRoute","authentication-factory"]).config(["$routeProvider",function(a){a.when("/login",{controller:"LoginCtrl",templateUrl:"login/login.html",reloadOnSearch:!1}).when("/login/:redirect",{controller:"LoginCtrl",templateUrl:"login/login.html"})}]).controller("LoginCtrl",["$scope","Auth","$routeParams","$location","$timeout",function(a,b,c,d,e){var f=b.$getAuth();f&&d.path(angular.isDefined(c.redirect)?"/"+c.redirect:"/main"),a.login=function(){b.$authWithPassword(a.user).then(function(a){d.path(angular.isDefined(c.redirect)?"/"+c.redirect:"/main")})["catch"](function(b){a.errorMessage="Invalid email or password"})},a.loginWithGoogle=function(){var b={scope:"profile"};g("google",b).then(function(a){d.path(angular.isDefined(c.redirect)?"/"+c.redirect:"/main")})["catch"](function(b){a.errorMessage="Invalid Google login"})},a.loginWithFacebook=function(){g("facebook").then(function(a){d.path(angular.isDefined(c.redirect)?"/"+c.redirect:"/main")})["catch"](function(b){a.errorMessage="Invalid Facebook login"})};var g=function(a,c){return b.$authWithOAuthPopup(a,c)}}]),angular.module("myApp.main",["ngRoute"]).config(["$routeProvider",function(a){a.when("/main",{controller:"MainCtrl",templateUrl:"main/main.html"})}]).controller("MainCtrl",["$scope","Auth",function(a,b){}]),angular.module("myApp.register",["ngRoute","authentication-factory"]).config(["$routeProvider",function(a){a.when("/register",{controller:"RegisterCtrl",templateUrl:"register/register.html"})}]).controller("RegisterCtrl",["$scope","Auth","$location",function(a,b,c){a.register=function(){var d={email:a.user.email,password:a.user.password};b.$createUser(d).then(function(e){b.$authWithPassword(d).then(function(b){a.user.provider=b.provider,delete a.user.password;var d=new Firebase("https://nitrous-demo.firebaseio.com/");d.child("users").child(e.uid).set(a.user),c.path("/main")})["catch"](function(a){console.log("Error: ",a)})})["catch"](function(a){console.log("Error: ",a)})}}]);